<!--
   - The Resin configuration file.
   -
   - This example file is more complicated than is needs to be because
   - it makes several configurations explicit that can be simplified and
   - because it needs to configure the examples.
   -
   - Look in conf/samples for more realistic sample configurations.
   -   conf/samples/simple.conf -- a simple, basic configuration
   -   conf/samples/deploy.conf -- a simple configuration for deployment
   -
   - The configuration is based on a purely element-based XML.  To make
   - it easier to read, attributes can be used as syntactic sugar.
   -
   - The following are equivalent:
   - <foo><bar>13</bar></foo>  - canonical representation, but verbose
   - <foo bar=13/>             - typical configuration
   - <foo><bar id=13/></foo>   - sometimes useful
  -->
<caucho.com>

<!-- Resin logging.  You can uncomment the following useful log.
   -
   - <log id='/caucho.com/tcp-server'
   -      href='stderr:'
   -      timestamp='[%H:%M:%S.%s]'/>
  -->

<!-- You can change the compiler to jikes or change the work-dir -->
<java compiler='internal' args=""/>

<!-- Sample database configuration for DBPool -->
<dbpool.sql id="test"
   driver="org.gjt.mm.mysql.Driver"
   url="jdbc:mysql://localhost:3306/test"
   user=""
   password=""
   max-connections=20/>

<!--
   - Use precompiled JSP classes if available.
   - 'static-encoding' - optimization if you stick to one character set
  -->
<jsp precompile='true' static-encoding='true'/>

<!--
   - For production sites, change class-update-interval to something
   - like 60, so it only checks for updates every minute.
  -->
<http-server>
  <!--
     - The root file directory of the server.  Apache users will change
     - this to /usr/local/apache/htdocs and IIS users will change it
     - to d:\inetpub\wwwroot
    -->
  <app-dir>doc</app-dir>

  <!-- the http port -->
  <httpd-port>8080</httpd-port>

  <!-- the srun port, read by both JVM and plugin -->
  <srun srun-host='localhost' srun-port='6802'/>

  <!--
     - Select an error page to display when the connection fails.
     -
     - <error-page location='connection' location='/my-error-page.html'/>
    -->

  <!-- To disable /caucho-status, set this to false -->
  <caucho-status>true</caucho-status>

  <!-- how often to check servlets for changes (id used for brevity) -->
  <class-update-interval id='2'/>

  <!-- minimum number of threads -->
  <thread-min>5</thread-min>

  <!-- maximum number of threads -->
  <thread-max>20</thread-max>

  <!--
     - How many threads to wait for keepalives.  Should be at least the
     - number of Apache processes to get good performance.
    -->
  <thread-keepalive id=10/>

  <!--
     - Enable internal caching.
     - 'size' is the memory size in kb
     - 'entries' is the number of entries in the memory cache
    -->
  <cache dir='cache' size='1024' entries='1024'/>

  <!-- default host if no other host matches -->
  <host id=''>
    <!--
       - The standalone server should uncomment for access logging.
       - With another web server, like Apache, the web server will
       - log this information.
    <access-log id='log/access.log' 
          format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"'/>
      -->

    <error-log id='log/error.log'/>

    <web-app id='/'>
      <!--
         - The classpath directive may be repeated.  Source is optional
         - Servlets and beans generally belong in WEB-INF/classes
        -->
      <classpath id='WEB-INF/classes'
                 source='WEB-INF/classes'
                 compile='true'/>

      <!-- expires time for a cacheable file -->
      <cache-mapping url-pattern='/' expires='2s'/>

      <!-- set the pages to be used as welcome (index) files -->
      <welcome-file-list>index.xtp, index.jsp, index.html</welcome-file-list>

      <!-- special mapping so /servlet/pkg.MyServlet invokes MyServlet -->
      <servlet-mapping url-pattern='/servlet/*' servlet-name='invoker'/>

      <servlet-mapping url-pattern='*.xtp'
                       servlet-name='com.caucho.jsp.XtpServlet'/>
      <servlet-mapping url-pattern='*.jsp'
                       servlet-name='com.caucho.jsp.JspServlet'/>

      <!-- session and cookie configuration -->
      <session-config>
        <session-max>4096</session-max>
        <session-timeout>30</session-timeout>
        <enable-cookies>true</enable-cookies>
        <enable-url-rewriting>true</enable-url-rewriting>
        <cookie-version>0</cookie-version>
      </session-config>

      <!-- 
         - The following entries configuration the examples.  You may safely
         - delete anything from here down.
        -->

      <!-- Application init parameters, see Env.java to get the values -->
      <context-param info='An application information string'/>

      <!-- snoop-servlet handles all urls starting with /snoop -->
      <servlet-mapping url-pattern='/snoop/*' servlet-name='snoop-servlet'/>

      <!-- configure snoop-servlet with init parameters -->
      <servlet servlet-name='snoop-servlet' servlet-class='Env'>
        <init-param info='A servlet information string'/>
      </servlet>

      <!-- /~user maps to user directories -->
      <path-mapping url-regexp='^/~([^/]*)' real-path='/home/$1/public_html/'/>
    </web-app>

    <!-- Define applications (ServletContexts) for the examples.
       - Singe applications are entirely separate from one another,
       - including session variables and servlet-mappings, the
       - servlet-mapping declarations need to be repeated.
      -->
    <web-app id='examples/tictactoe'/>
 
    <web-app id='examples/navigation'/>

    <web-app id='examples/xsl'/>

    <web-app id='examples/templates'>
      <servlet-mapping url-pattern='/servlet/*' servlet-name='invoker'/>
      <servlet-mapping url-pattern='/GuestJsp' servlet-name='GuestJsp'/>
      <servlet-mapping url-pattern='/GuestXtp' servlet-name='GuestXtp'/>
      <servlet-mapping url-pattern='/RSS' servlet-name='jsp.RSS'/>

      <servlet servlet-name='GuestJsp' servlet-class='jsp.GuestJsp'/>
      <servlet servlet-name='GuestXtp' servlet-class='jsp.GuestXtp'/>
    </web-app>

    <web-app id='/examples/login'/>
  </host>
</http-server>
</caucho.com>
